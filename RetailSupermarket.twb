<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sample - Superstore (Superstore.csv(1))' inline='true' name='federated.1cnqjal0fohmsd18ke6q909gijlz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore.csv(1)' name='excel-direct.16ktc5i02w6uk712pn05p19gj1c2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/emmab/Downloads/Superstore.csv(1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.16ktc5i02w6uk712pn05p19gj1c2' name='Sample - Superstore' table='[&apos;Sample - Superstore$&apos;]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='row_id' ordinal='0' />
            <column datatype='string' name='order_id' ordinal='1' />
            <column datatype='date' name='order_date' ordinal='2' />
            <column datatype='date' name='ship_date' ordinal='3' />
            <column datatype='string' name='ship_mode' ordinal='4' />
            <column datatype='string' name='customer_id' ordinal='5' />
            <column datatype='string' name='customer_name' ordinal='6' />
            <column datatype='string' name='segment' ordinal='7' />
            <column datatype='string' name='country' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='string' name='state' ordinal='10' />
            <column datatype='integer' name='postal_code' ordinal='11' />
            <column datatype='string' name='region' ordinal='12' />
            <column datatype='string' name='product_id' ordinal='13' />
            <column datatype='string' name='category' ordinal='14' />
            <column datatype='string' name='sub_category' ordinal='15' />
            <column datatype='string' name='product_name' ordinal='16' />
            <column datatype='real' name='sales' ordinal='17' />
            <column datatype='integer' name='quanitity' ordinal='18' />
            <column datatype='real' name='discount' ordinal='19' />
            <column datatype='real' name='profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.16ktc5i02w6uk712pn05p19gj1c2' name='Sample - Superstore' table='[&apos;Sample - Superstore$&apos;]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='row_id' ordinal='0' />
            <column datatype='string' name='order_id' ordinal='1' />
            <column datatype='date' name='order_date' ordinal='2' />
            <column datatype='date' name='ship_date' ordinal='3' />
            <column datatype='string' name='ship_mode' ordinal='4' />
            <column datatype='string' name='customer_id' ordinal='5' />
            <column datatype='string' name='customer_name' ordinal='6' />
            <column datatype='string' name='segment' ordinal='7' />
            <column datatype='string' name='country' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='string' name='state' ordinal='10' />
            <column datatype='integer' name='postal_code' ordinal='11' />
            <column datatype='string' name='region' ordinal='12' />
            <column datatype='string' name='product_id' ordinal='13' />
            <column datatype='string' name='category' ordinal='14' />
            <column datatype='string' name='sub_category' ordinal='15' />
            <column datatype='string' name='product_name' ordinal='16' />
            <column datatype='real' name='sales' ordinal='17' />
            <column datatype='integer' name='quanitity' ordinal='18' />
            <column datatype='real' name='discount' ordinal='19' />
            <column datatype='real' name='profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>row_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[row_id]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>row_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ship_date]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>ship_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ship_mode]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>ship_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_name]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>customer_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[segment]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sub_category]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>sub_category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_name]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quanitity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quanitity]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>quanitity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[discount]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit]</local-name>
            <parent-name>[Sample - Superstore]</parent-name>
            <remote-alias>profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='percentage of profit' datatype='real' default-format='p0.00%' name='[Calculation_1574289592751812608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit]) / NULLIF(SUM([sales]) - SUM([discount]), 0)' />
      </column>
      <column caption='total profit by segment' datatype='real' name='[Calculation_1574289592767070218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit])' />
      </column>
      <column caption='num of customers' datatype='integer' name='[Calculation_2752543844380250117]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([customer_name])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sample - Superstore' datatype='table' name='[__tableau_internal_object_id__].[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Aberdeen&quot;' value='45.464700000000001' />
          <semantic-value key='&quot;Abilene&quot;' value='32.448700000000002' />
          <semantic-value key='&quot;Akron&quot;' value='41.081200000000003' />
          <semantic-value key='&quot;Alexandria&quot;' value='38.8048' />
          <semantic-value key='&quot;Henderson&quot;' value='37.836199999999998' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Aberdeen&quot;' value='98.486500000000007' />
          <semantic-value key='&quot;Abilene&quot;' value='99.733099999999993' />
          <semantic-value key='&quot;Akron&quot;' value='81.518799999999999' />
          <semantic-value key='&quot;Alexandria&quot;' value='77.046899999999994' />
          <semantic-value key='&quot;Henderson&quot;' value='87.590000000000003' />
        </semantic-values>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Id' datatype='string' name='[customer_id]' role='dimension' type='nominal' />
      <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[discount]' role='measure' type='quantitative' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Postal Code' datatype='integer' default-format='*00000' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Product Id' datatype='string' name='[product_id]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
      <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
      <column caption='Quanitity' datatype='integer' name='[quanitity]' role='measure' type='quantitative' />
      <column aggregate-role-from='[state]' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Row Id' datatype='integer' name='[row_id]' role='dimension' type='ordinal' />
      <column caption='Sales' datatype='real' name='[sales]' role='measure' type='quantitative' />
      <column caption='Segment' datatype='string' name='[segment]' role='dimension' type='nominal' />
      <column caption='Ship Date' datatype='date' name='[ship_date]' role='dimension' type='ordinal' />
      <column caption='Ship Mode' datatype='string' name='[ship_mode]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sub Category' datatype='string' name='[sub_category]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <column-instance column='[segment]' derivation='None' name='[none:segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[ship_mode]' derivation='None' name='[none:ship_mode:nk]' pivot='key' type='nominal' />
      <group caption='Region Set' name='[Region Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[region]' member='&quot;West&quot;' />
      </group>
      <drill-paths>
        <drill-path name='country, state, city'>
          <field>[country]</field>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emmab/AppData/Local/Temp/TableauTemp/#TableauTemp_19u5nl51ykgmen1caipb61boxmyk.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/08/2024 01:24:34 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>row_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[row_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>row_id</remote-alias>
              <ordinal>0</ordinal>
              <family>Sample - Superstore</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[order_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_id</remote-alias>
              <ordinal>1</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[order_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sample - Superstore</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ship_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[ship_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ship_date</remote-alias>
              <ordinal>3</ordinal>
              <family>Sample - Superstore</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ship_mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ship_mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ship_mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customer_id</remote-alias>
              <ordinal>5</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customer_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[customer_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customer_name</remote-alias>
              <ordinal>6</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>8</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>9</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>10</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>postal_code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[postal_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>postal_code</remote-alias>
              <ordinal>11</ordinal>
              <family>Sample - Superstore</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>12</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_id</remote-alias>
              <ordinal>13</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>14</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sub_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sub_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sub_category</remote-alias>
              <ordinal>15</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>product_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[product_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>product_name</remote-alias>
              <ordinal>16</ordinal>
              <family>Sample - Superstore</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Sample - Superstore</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3411</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quanitity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[quanitity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quanitity</remote-alias>
              <ordinal>18</ordinal>
              <family>Sample - Superstore</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Sample - Superstore</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Sample - Superstore</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3784</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ship_mode:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:segment:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:region:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:category:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='row_id' />
        <field-sort-custom-order field='order_id' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='ship_date' />
        <field-sort-custom-order field='ship_mode' />
        <field-sort-custom-order field='customer_id' />
        <field-sort-custom-order field='customer_name' />
        <field-sort-custom-order field='Calculation_2752543844380250117' />
        <field-sort-custom-order field='segment' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='postal_code' />
        <field-sort-custom-order field='region' />
        <field-sort-custom-order field='product_id' />
        <field-sort-custom-order field='category' />
        <field-sort-custom-order field='sub_category' />
        <field-sort-custom-order field='product_name' />
        <field-sort-custom-order field='sales' />
        <field-sort-custom-order field='quanitity' />
        <field-sort-custom-order field='discount' />
        <field-sort-custom-order field='profit' />
        <field-sort-custom-order field='Profit (copy)_1574289592763297797' />
        <field-sort-custom-order field='Calculation_1574289592751812608' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sample - Superstore' id='Sample - Superstore_A9BE41306C494D528AEBCD6D29C7A7CB'>
            <properties context=''>
              <relation connection='excel-direct.16ktc5i02w6uk712pn05p19gj1c2' name='Sample - Superstore' table='[&apos;Sample - Superstore$&apos;]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='row_id' ordinal='0' />
                  <column datatype='string' name='order_id' ordinal='1' />
                  <column datatype='date' name='order_date' ordinal='2' />
                  <column datatype='date' name='ship_date' ordinal='3' />
                  <column datatype='string' name='ship_mode' ordinal='4' />
                  <column datatype='string' name='customer_id' ordinal='5' />
                  <column datatype='string' name='customer_name' ordinal='6' />
                  <column datatype='string' name='segment' ordinal='7' />
                  <column datatype='string' name='country' ordinal='8' />
                  <column datatype='string' name='city' ordinal='9' />
                  <column datatype='string' name='state' ordinal='10' />
                  <column datatype='integer' name='postal_code' ordinal='11' />
                  <column datatype='string' name='region' ordinal='12' />
                  <column datatype='string' name='product_id' ordinal='13' />
                  <column datatype='string' name='category' ordinal='14' />
                  <column datatype='string' name='sub_category' ordinal='15' />
                  <column datatype='string' name='product_name' ordinal='16' />
                  <column datatype='real' name='sales' ordinal='17' />
                  <column datatype='integer' name='quanitity' ordinal='18' />
                  <column datatype='real' name='discount' ordinal='19' />
                  <column datatype='real' name='profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1_4E61A54313974CE5ACF879C75031B318]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map of Sales' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region,State' />
        <param name='target' value='Map of Sales' />
      </command>
    </action>
    <action caption='Highlight1 1' name='[Action2_73CD5F4FCF7C44ECB06F14B197B907C4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Profit by Region' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region' />
        <param name='target' value='Profit by Region' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='City - Highest Num of Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aberdeen&quot;' value='45.464700000000001' />
                <semantic-value key='&quot;Abilene&quot;' value='32.448700000000002' />
                <semantic-value key='&quot;Akron&quot;' value='41.081200000000003' />
                <semantic-value key='&quot;Alexandria&quot;' value='38.8048' />
                <semantic-value key='&quot;Henderson&quot;' value='37.836199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aberdeen&quot;' value='98.486500000000007' />
                <semantic-value key='&quot;Abilene&quot;' value='99.733099999999993' />
                <semantic-value key='&quot;Akron&quot;' value='81.518799999999999' />
                <semantic-value key='&quot;Alexandria&quot;' value='77.046899999999994' />
                <semantic-value key='&quot;Henderson&quot;' value='87.590000000000003' />
              </semantic-values>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Sales' datatype='real' name='[sales]' role='measure' type='quantitative' />
            <column-instance column='[sales]' derivation='Sum' name='[sum:sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]' direction='DESC' using='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' />
          <slices>
            <column>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]</cols>
      </table>
      <simple-id uuid='{2A1EA887-8D0E-4FB0-A28A-0CCAC00F37D3}' />
    </worksheet>
    <worksheet name='City - Lowest Num of Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='ROUND([Sales])' datatype='real' name='[Calculation_1875186343183876097]' role='measure' type='quantitative' user:unnamed='City - Lowest Num of Sales'>
              <calculation class='tableau' formula='ROUND([sales])' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aberdeen&quot;' value='45.464700000000001' />
                <semantic-value key='&quot;Abilene&quot;' value='32.448700000000002' />
                <semantic-value key='&quot;Akron&quot;' value='41.081200000000003' />
                <semantic-value key='&quot;Alexandria&quot;' value='38.8048' />
                <semantic-value key='&quot;Henderson&quot;' value='37.836199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aberdeen&quot;' value='98.486500000000007' />
                <semantic-value key='&quot;Abilene&quot;' value='99.733099999999993' />
                <semantic-value key='&quot;Akron&quot;' value='81.518799999999999' />
                <semantic-value key='&quot;Alexandria&quot;' value='77.046899999999994' />
                <semantic-value key='&quot;Henderson&quot;' value='87.590000000000003' />
              </semantic-values>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Sales' datatype='real' name='[sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1875186343183876097]' derivation='Sum' name='[sum:Calculation_1875186343183876097:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales]' derivation='Sum' name='[sum:sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]' direction='ASC' using='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:Calculation_1875186343183876097:qk]' />
          <slices>
            <column>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:Calculation_1875186343183876097:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:Calculation_1875186343183876097:qk]' scope='cols' value='Sales' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' value='N' />
            <format attr='text-format' data-class='total' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' value='N' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' value='N' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:Calculation_1875186343183876097:qk]</cols>
      </table>
      <simple-id uuid='{5CDC481A-A03F-454B-8606-CC58680DA82B}' />
    </worksheet>
    <worksheet name='Map of Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aberdeen&quot;' value='45.464700000000001' />
                <semantic-value key='&quot;Abilene&quot;' value='32.448700000000002' />
                <semantic-value key='&quot;Akron&quot;' value='41.081200000000003' />
                <semantic-value key='&quot;Alexandria&quot;' value='38.8048' />
                <semantic-value key='&quot;Henderson&quot;' value='37.836199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aberdeen&quot;' value='98.486500000000007' />
                <semantic-value key='&quot;Abilene&quot;' value='99.733099999999993' />
                <semantic-value key='&quot;Akron&quot;' value='81.518799999999999' />
                <semantic-value key='&quot;Alexandria&quot;' value='77.046899999999994' />
                <semantic-value key='&quot;Henderson&quot;' value='87.590000000000003' />
              </semantic-values>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column aggregate-role-from='[state]' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[sales]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[sales]' derivation='Sum' name='[sum:sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[Longitude (generated)]' field-type='quantitative' max='-7236770.374738845' min='-14271161.801257925' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[Latitude (generated)]' field-type='quantitative' max='6741620.8772218786' min='2562096.0738496706' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' field-type='quantitative' max-size='1' min-size='0' type='rangesize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='Region' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:region:nk]' />
              <lod column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' />
              <geometry column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='mark-transparency' value='116' />
              </style-rule>
            </style>
          </pane>
          <_.fcp.Layers.true...pane generated-title='City' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]' />
              <size column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' />
              <lod column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7865926027297974' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[Latitude (generated)]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4BC2091C-B226-4F27-95A7-B2F12ACC341E}' />
    </worksheet>
    <worksheet name='Profit Per Category and Subcategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[sub_category]' derivation='None' name='[none:sub_category:nk]' pivot='key' type='nominal' />
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Sub Category' datatype='string' name='[sub_category]' role='dimension' type='nominal' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:sub_category:nk]' value='#ffffff' />
            <format attr='width' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:sub_category:nk]' value='108' />
            <format attr='width' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='14' />
            <format attr='font-weight' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='bold' />
            <format attr='vertical-align' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='center' />
            <format attr='text-align' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='center' />
            <format attr='text-orientation' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='0' />
            <format attr='wrap' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='off' />
            <format attr='font-size' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:sub_category:nk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk] / [federated.1cnqjal0fohmsd18ke6q909gijlz].[none:sub_category:nk])</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]</cols>
      </table>
      <simple-id uuid='{02576798-CB63-4EB9-ACFB-94656911EB21}' />
    </worksheet>
    <worksheet name='Profit by Category'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='total profit by segment' datatype='real' name='[Calculation_1574289592767070218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit])' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1574289592767070218]' derivation='User' name='[pcto:usr:Calculation_1574289592767070218:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' value='Category'>
              <formatted-text>
                <run>Category</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' />
              <wedge-size column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' />
              <text column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[pcto:usr:Calculation_1574289592767070218:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F41D9A79-5097-4C8A-9677-DB52743A52C3}' />
    </worksheet>
    <worksheet name='Profit by Category (bar)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]</cols>
      </table>
      <simple-id uuid='{C70A86FF-005D-4999-A5DF-B38BD9FD55CF}' />
    </worksheet>
    <worksheet name='Profit by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[state]' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[Longitude (generated)]' field-type='quantitative' max='-7316706.6409492884' min='-14351098.067468369' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[Latitude (generated)]' field-type='quantitative' max='6753040.3438977581' min='2573515.5405255505' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' value='15' />
            <format attr='font-weight' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' value='bold' />
            <format attr='text-align' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' value='auto' />
            <format attr='wrap' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' value='auto' />
            <format attr='vertical-align' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' value='auto' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:region:nk]' />
              <text column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' />
              <geometry column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-halo' value='false' />
                <format attr='mark-transparency' value='116' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[Latitude (generated)]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FDCFB67A-A6C1-47E3-A1C9-5523E4A83DF9}' />
    </worksheet>
    <worksheet name='Profit by Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='total profit by segment' datatype='real' name='[Calculation_1574289592767070218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit])' />
            </column>
            <column-instance column='[segment]' derivation='None' name='[none:segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1574289592767070218]' derivation='User' name='[pcto:usr:Calculation_1574289592767070218:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[segment]' role='dimension' type='nominal' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:segment:nk]' />
              <wedge-size column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:profit:qk]' />
              <text column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[pcto:usr:Calculation_1574289592767070218:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CDDD5E14-0448-406C-BC03-D4AA97E21CAD}' />
    </worksheet>
    <worksheet name='Segment with most Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column-instance column='[segment]' derivation='None' name='[none:segment:nk]' pivot='key' type='nominal' />
            <column caption='Sales' datatype='real' name='[sales]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[segment]' role='dimension' type='nominal' />
            <column-instance column='[sales]' derivation='Sum' name='[sum:sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:segment:nk]' />
              <text column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:segment:nk]</cols>
      </table>
      <simple-id uuid='{91A4740A-A017-4CE2-8242-72E230492EF7}' />
    </worksheet>
    <worksheet name='Ship Mode by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[ship_mode]' derivation='Count' name='[cnt:ship_mode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[ship_mode]' derivation='None' name='[none:ship_mode:nk]' pivot='key' type='nominal' />
            <column caption='Ship Mode' datatype='string' name='[ship_mode]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[cnt:ship_mode:qk]' scope='cols' value='Num of Products Shipped' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='12' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[cnt:ship_mode:qk]</cols>
      </table>
      <simple-id uuid='{7E8CEFAB-4F85-4D90-8BC7-F21EDC96D32E}' />
    </worksheet>
    <worksheet name='Shipping Mode by Orders'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore (Superstore.csv(1))' name='federated.1cnqjal0fohmsd18ke6q909gijlz' />
          </datasources>
          <datasource-dependencies datasource='federated.1cnqjal0fohmsd18ke6q909gijlz'>
            <column-instance column='[order_id]' derivation='Count' name='[cnt:order_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ship_mode]' derivation='None' name='[none:ship_mode:nk]' pivot='key' type='nominal' />
            <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
            <column caption='Ship Mode' datatype='string' name='[ship_mode]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]' direction='DESC' using='[federated.1cnqjal0fohmsd18ke6q909gijlz].[cnt:order_id:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1cnqjal0fohmsd18ke6q909gijlz].[cnt:order_id:qk]' scope='rows' value='Number of Orders' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cnqjal0fohmsd18ke6q909gijlz].[cnt:order_id:qk]</rows>
        <cols>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]</cols>
      </table>
      <simple-id uuid='{4B0130CB-E3A2-4025-875F-36F959DF4331}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='20' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='18' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='51952' id='5' param='vert' type-v2='layout-flow' w='51902' x='586' y='1042'>
                <zone h='51952' id='11' name='Map of Sales' w='51902' x='586' y='1042'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='97916' id='7' param='vert' type-v2='layout-flow' w='46926' x='52488' y='1042'>
                <zone fixed-size='459' h='60808' id='8' is-fixed='true' name='Profit Per Category and Subcategory' w='46926' x='52488' y='1042'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='20834' id='12' name='Map of Sales' pane-specification-id='2' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:region:nk]' type-v2='color' w='8855' x='586' y='78124'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='144' h='20834' id='13' is-fixed='true' name='Map of Sales' pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' type-v2='size' w='15521' x='9441' y='78124'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25130' id='17' name='Ship Mode by Category' w='51902' x='586' y='52994'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20834' id='21' name='Ship Mode by Category' pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]' type-v2='color' w='27526' x='24962' y='78124'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='28' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='51952' id='11' is-fixed='true' name='Map of Sales' w='51902' x='586' y='1042'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20834' id='12' name='Map of Sales' pane-specification-id='2' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:region:nk]' type-v2='color' w='8855' x='586' y='78124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='144' h='20834' id='13' name='Map of Sales' pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' type-v2='size' w='15521' x='9441' y='78124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60808' id='8' is-fixed='true' name='Profit Per Category and Subcategory' w='46926' x='52488' y='1042'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='185' h='25130' id='17' is-fixed='true' name='Ship Mode by Category' w='51902' x='586' y='52994'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20834' id='21' name='Ship Mode by Category' pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]' type-v2='color' w='27526' x='24962' y='78124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{41FF196C-14B0-4E7E-9EC5-82CBFD5092C6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Map of Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit Per Category and Subcategory' />
        <viewpoint name='Ship Mode by Category' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{16C8D1D6-503A-4894-BE2A-ECF6071C1D24}' />
    </window>
    <window class='worksheet' name='Map of Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7D04147C-B478-4964-B223-6E65B33C528A}' />
    </window>
    <window class='worksheet' name='Profit by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8F7CC48D-74A5-472F-A1B5-A387ACC8758F}' />
    </window>
    <window class='worksheet' maximized='true' name='Profit Per Category and Subcategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDEF3DC4-BBE1-45E3-9F82-BD6AC1D86CF9}' />
    </window>
    <window class='worksheet' name='Ship Mode by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EC43417D-FCDB-4825-82A9-125321B3D7B8}' />
    </window>
    <window class='worksheet' name='Profit by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AFE369C4-BB1A-42E2-BF7A-5126068C8FB8}' />
    </window>
    <window class='worksheet' name='Profit by Category (bar)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78212267-E1E2-4C5E-95DD-5A379518A9F0}' />
    </window>
    <window class='worksheet' name='City - Highest Num of Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]</field>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:country:nk]</field>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99933AD0-634B-4968-9F97-D4B17D9D1E90}' />
    </window>
    <window class='worksheet' name='City - Lowest Num of Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[sum:sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:city:nk]</field>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E928738-99C5-4BC5-AF27-02629481566D}' />
    </window>
    <window class='worksheet' name='Shipping Mode by Orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:order_id:nk]</field>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:ship_mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B024941-FA19-437D-939F-33702CE196C5}' />
    </window>
    <window class='worksheet' name='Segment with most Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97FD60B8-6A01-4592-BA47-872ADABF2848}' />
    </window>
    <window class='worksheet' name='Profit by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cnqjal0fohmsd18ke6q909gijlz].[none:segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9FA48EED-41F7-4092-B078-CED8CB609FA1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='City - Highest Num of Sales' width='192'>
      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
      tceJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='City - Lowest Num of Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      f7tTqHoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map of Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Per Category and Subcategory' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Profit by Category' width='164'>
      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
      7YLe0NywAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='140' name='Profit by Category (bar)' width='192'>
      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
      7gVb6aMyiyEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit by Region' width='192'>
      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
      ogAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Profit by Segment' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Segment with most Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='Ship Mode by Category' width='192'>
      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
      pf0/2t3CxM5ZaEwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Shipping Mode by Orders' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
